# -*- mode: shell-script -*-
# vim: ft=zsh fdm=marker :

bindkey '[1;5C' forward-word
bindkey '[1;5D' backward-word
bindkey '[7~' beginning-of-line
bindkey '[8~' end-of-line
bindkey '[3~' delete-char
bindkey '^p' history-beginning-search-backward
bindkey '^n' history-beginning-search-forward
if [ ! $TERM = "eterm-color" ]; then
    bindkey -s `tput kf1` '^uramclean\n'
    bindkey -s `tput kf2` '^uramrearm\n'
fi
bindkey -s 'l' 'qclear\n'
# {{{ pairs
bindkey -s '' '[]OD'
bindkey -s ']' '{}OD'
bindkey -s '0' '()OD'
bindkey -s '`' "\`\`OD"
bindkey -s '1' "\'\'OD"
# }}}
#stty -ixon

autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe'  edit-command-line
bindkey '^X^E' edit-command-line

send-alarm()
{
    echo -ne "\a"
}
zle -N send-alarm
bindkey '^Xa' send-alarm

bindkey -s '^Z' 'qbg && disown\n'

bindkey 'j' vi-find-next-char


expand-path()
{
    autoload -U modify-current-argument
    modify-current-argument '$ARG:Q:A:q'
}
zle -N expand-path
bindkey '^Xp' expand-path


bindkey -s 'w' "^utask\n"

bindkey -s 'r' "^u . ranger\n"


exec-emacs-here()
{
    exec emacsclient -c -n .
}
zle -N exec-emacs-here
bindkey '^Xd' exec-emacs-here



autoload predict-on predict-off
my-predict-on()
{
    zstyle ':completion:*' completer _expand _complete _ignored
    predict-on
}
my-predict-off()
{
    zstyle ':completion:*' completer _expand _complete _ignored _approximate
    predict-off
}
zle -N my-predict-on
bindkey '^X-' my-predict-on
zle -N my-predict-off
bindkey '^X=' my-predict-off


my-create-generic-completion()
{
    autoload -U split-shell-arguments
    local reply REPLY REPLY2

    split-shell-arguments

    local i
    for ((i = $#reply-1; i > 0; --i)); do
        case $reply[i] in
            ';'|'|'|'||'|'&'|'&&'|'sudo')
                break
                ;;
        esac
    done

    compdef _gnu_generic $reply[i+2]
}
zle -N my-create-generic-completion
bindkey '^X^H' my-create-generic-completion


if (( $+commands[fzf] )); then
    fzf-cd() {
        cd "${$(find * -path '*/\.*' -prune \
                -o -type d -print 2> /dev/null | fzf):-.}"
        zle reset-prompt
    }
    zle     -N    fzf-cd
    bindkey '\ec' fzf-cd

    fzf-file-widget() {
        local FILES
        local IFS="
"
        FILES=($(
            find * -path '*/\.*' -prune \
                -o -type f -print \
                -o -type l -print 2> /dev/null | fzf -m))
        unset IFS
        FILES=$FILES:q

        LBUFFER="${LBUFFER%% #} $FILES"
        zle redisplay
    }
    zle     -N   fzf-file-widget
    bindkey '^X^T' fzf-file-widget
fi
