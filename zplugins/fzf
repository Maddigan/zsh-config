# -*- mode: shell-script -*-
# vim: set ft=zsh :

if ! (( $+commands[fzf] )); then
    return 1
fi

fzf-cd() {
    if [ -n "$NUMERIC" ]; then
        cd ~/projects
    fi
    cd "${$(command find -L . \( -path '*/\.*' -o -fstype 'dev' -o -fstype 'proc' \) -prune \
    -o -type d -print 2> /dev/null | sed 1d | cut -b3- | fzf +m):-.}"
    zle reset-prompt
}
zle     -N    fzf-cd
bindkey '\ec' fzf-cd

__fsel() {
    local DOTFILEFILTER
    if [ -z "$NUMERIC" ]; then
        DOTFILEFILTER="-path */\.* -o"
    fi
    command find -L . \( $=DOTFILEFILTER -fstype 'dev' -o -fstype 'proc' \) -prune \
            -o -type f -print \
            -o -type d -print \
            -o -type l -print 2> /dev/null | sed 1d | cut -b3- | fzf -m | while read item; do
        printf '%s%q ' "$1" "$item"
    done
    echo
}

if [ -n "$TMUX_PANE" -a ${FZF_TMUX:-1} -ne 0 -a ${LINES:-40} -gt 15 ]; then
    fzf-file-widget() {
        local height
        height=${FZF_TMUX_HEIGHT:-40%}
        if [[ $height =~ %$ ]]; then
            height="-p ${height%\%}"
        else
            height="-l $height"
        fi
        tmux split-window $height "cd $(printf %q "$PWD");zsh -c 'source ~/.zplugins/fzf; tmux send-keys -t $TMUX_PANE \"\$(__fsel $1)\"'"
    }
else
    fzf-file-widget() {
        LBUFFER="${LBUFFER}$(__fsel $1)"
        zle redisplay
    }
fi
zle -N fzf-file-widget

fzf-file-widget-wrapper()
{
    autoload -U modify-current-argument split-shell-arguments
    local reply REPLY REPLY2
    local OLDPWD

    ((--CURSOR))
    split-shell-arguments
    ((++CURSOR))

    local ROOTDIR
    eval "ROOTDIR=(${reply[$REPLY]})"
    while [[ ! -d "$ROOTDIR" && "$ROOTDIR" = */* ]]; do
        ROOTDIR=${ROOTDIR%/*}
    done
    if [ -d "$ROOTDIR"  ]; then
        cd $ROOTDIR
        modify-current-argument '${ARG:+}' # remove the argument
        fzf-file-widget "${(q)ROOTDIR%%/#}/"
        cd -
    else
        fzf-file-widget
    fi
}
zle     -N   fzf-file-widget-wrapper
bindkey '^T' fzf-file-widget-wrapper


if ! (( $+commands[fasd] )); then
    return
fi

fzf-fasd() {
    local REPLY
    if REPLY="`fasd -dlR | fzf`"; then
        cd $REPLY
    fi
    zle reset-prompt
}
zle -N fzf-fasd
bindkey '\eC' fzf-fasd
