# -*- mode: shell-script -*-
# vim: set ft=zsh fdm=marker :

mkcd()
{
    mkdir -p "$@"
    cd "$@"
}

mkmv()
{
    if [ -z "$1" ]; then
        return 1
    fi
    local DIR="$1"
    shift
    mkdir -p "$DIR"
    if [ -z "$1" ]; then
        mv *~"$DIR" "$DIR"
    else
        mv $* "$DIR"
    fi
}

wprefix()
{
    export WINEPREFIX="$HOME/$1/"
}

man2pdf()
{
    man -t $1 | ps2pdf - > $2
}

killwatch()
{
    if [ -z "$2" ]; then
        2=5;
    fi
    while [ true ]; do
        killall $1 2> /dev/null
        sleep $2
    done
}

listargs()
{
    local i
    for i in {1..$#}; do
        echo $argv[i]
    done
}

screencapture()
{
    if [ -z "$2" -a -z "$3" ]; then
        2="-s"
        3="wsxga"
    fi
    local FILE=$1
    shift
    ffmpeg -f x11grab -y -r 60 $@ -i :0.0 -async 0 -vsync 0 -sameq "$FILE"
}

nuke()
{
    local CONFIRM
    echo -n "Are you sure you want to delete \"$RED$BOLD$PWD$RESET\"?"
    read -s -k CONFIRM
    if [ "$CONFIRM" = "y" ]; then
        cd ..
        echo

        local ARG VERBOSE
        VERBOSE=1
        while getopts "qf" ARG; do
            case "$ARG" in
                q)
                    VERBOSE=
                    ;;
                f)
                    chmod -R 777 $OLDPWD
                    ;;
                ?)
                    ;;
            esac
        done

        rm -rf ${VERBOSE:+-v} $OLDPWD
    fi
}

if (( $+commands[journalctl] )); then
    readlog()
    {
        local service=$1
        shift
        journalctl _SYSTEMD_UNIT="$service.service" "$@"
    }
fi

function t() {
    project=$(basename `pwd`);
    tp=( $(task _projects | grep $project) );

    if [[ -n $tp ]]; then
        task "$@" project:$project;
    else
        task "$@"
    fi
}
alias t=' t'
