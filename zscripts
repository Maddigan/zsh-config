# vim: set ft=zsh fdm=marker :
mkcd()
{
	mkdir -p "$*"
	cd "$*"
}

tree()
{
	ls -R $* | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
}

moc() # {{{
{
	mocp $*
	if [ -z $1 ]; then
		clear
		if [ -n "$STY" ]; then
			screen -X title "zsh" 
		elif [ -z "$TMUX" ]; then
			echo -en "]2;Terminal"
		fi
	fi
}
if [ -n "$PHONE" ]; then
	alias moc='moc --config ~/.moc/phone_config'
fi
# }}}

vbeep()
{
	yes "$*" > /dev/audio
}

# {{{ cp_p
#cp_p()
#{
#	pv -per $1 > $2
#}

#cp_p()
#{
#   strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
#      | awk '{
#        count += $NF
#            if (count % 10 == 0) {
#               percent = count / total_size * 100
#               printf "%3d%% [", percent
#               for (i=0;i<=percent;i++)
#                  printf "="
#               printf ">"
#               for (i=percent;i<100;i++)
#                  printf " "
#               printf "]\r"
#            }
#         }
#         END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
#}
# }}}

# {{{ WIN-BOOT
#win-boot()
#{
#	sudo grub-reboot "Microsoft Windows XP Professional (on /dev/sda3)"
#	sudo init 6
#}
# }}}
# {{{ connect
#connect()
#{
#	wicd-cli --wireless --scan
#	wicd-cli --wireless -n `wicd-cli --wireless --list-networks | grep -E "\bVifon's Network\b|\bKFC\b|\bWEiTI\b" | sed 's/\([0-9]*\).*/\1/'` -c
#}
# }}}

# {{{ CPU
#cpu()
#{
#	case "$1" in
#		b)
#			cpufreq-selector -c 0 -g powersave
#			cpufreq-selector -c 1 -g powersave
#			echo CPU governor set to: POWERSAVE
#			;;
#		d)
#			cpufreq-selector -c 0 -g ondemand
#			cpufreq-selector -c 1 -g ondemand
#			echo CPU governor set to: ONDEMAND
#			;;
#		p)
#			cpufreq-selector -c 0 -g performance
#			cpufreq-selector -c 1 -g performance
#			echo CPU governor set to: PERFORMANCE
#			;;
#		*)
#			#cat /proc/cpuinfo | grep -m 1 MHz | sed 's/.*: \(.*\)\..*/\1 MHz/'
#			echo current governor: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor | awk '{print toupper($1)}'`
#			echo frequencies:
#			cat /proc/cpuinfo | grep MHz | sed 's/.*: \(.*\)\..*/		\1 MHz/'
#			;;
#	esac
#}
#compctl -k "(d b p)" cpu
# }}}

wprefix()
{
	export WINEPREFIX="$HOME/$1/"
}

man2pdf()
{
	man -t $1 | ps2pdf - > $2
}

#acpic()
#{
#	acpi | sed "s#\\([0-9]\\{1,3\\}%\\)\\([^0-9]\+\\)\\([0-9]*[^:]:[0-9]\\{2\\}\\):#`tput setaf 1``tput bold`\\1`tput sgr0`\\2`tput setaf 6``tput bold`\\3`tput sgr0`:#"
#}
#alias acpi='acpi-c'

killwatch()
{
	if [ -z "$2" ]; then
		2=5;
	fi
	while [ true ]; do
		killall $1 2> /dev/null
		sleep $2
	done
}

listcolors()
{
	local COLORS
	COLORS=(RED GREEN YELLOW BLUE MAGENTA CYAN WHITE)
	for i in {1..7}; do
		echo $i: `tput setaf $i`$COLORS[$i] `tput bold`$COLORS[$i]`tput sgr0`
	done
}

listargs()
{
	local i
	for i in {1..$#}; do
		echo $argv[i]
	done
}

cutline()
{
	head -n $2 $1 | tail -n 1
}

xephyr()
{
	if [ -z "$1" ]; then
		1=1
	fi
	if [ -z "$2" ]; then
		2=800x600
	fi
	Xephyr :$1 -screen $2 2> /dev/null &
	sleep 1
	export DISPLAY=:$1
	openbox 2> /dev/null &
}

amount()
{
	pmount "$1" 2> /dev/null
	if [ $? = 0 ]; then
		echo "$BOLD$GREEN*$RESET $1 mounted"
		zsh
		echo "$BOLD$YELLOW*$RESET Unmounting $1..."
		pumount "$1" 2> /dev/null
		if [ $? = 0 ]; then
			echo "$BOLD$GREEN*$RESET $1 unmounted"
		else
			echo "$BOLD$RED*$RESET Cannot unmount $1"
		fi
	else
		echo "$BOLD$RED*$RESET Cannot mount $1"
	fi
}

# {{{ todo
#todoadd()
#{
#	cat >> ~/todo
#	sed -i '/^$/d' ~/todo
#	sort ~/todo -o ~/todo
#}
#todols()
#{
#	cat ~/todo
#}
#todorm()
#{
#	cat -n ~/todo
#	echo ------------------------------
#	sed -i "`cat`" ~/todo
#}
# }}}
